{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Appu\\\\Documents\\\\Appu Projects\\\\sensorapp\\\\biosensor-dashboard\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport mqtt from 'mqtt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState('');\n  const [mode, setMode] = useState('pulse');\n  useEffect(() => {\n    const options = {\n      protocol: 'wss',\n      port: 8884,\n      username: 'hivemq.webclient.1719700172491',\n      password: 'F1N;&6yUus:If0>Xg8EG'\n    };\n    const client = mqtt.connect('wss://9165a2be0b2244a2be418b2d702267d5.s1.eu.hivemq.cloud:8884/mqtt', options);\n    client.on('connect', () => {\n      console.log('Connected to MQTT broker');\n      client.subscribe('Daten');\n      client.subscribe('Moduswechsel');\n    });\n    client.on('message', (topic, message) => {\n      const payload = message.toString();\n      if (topic === 'Daten') {\n        setData(payload);\n      } else if (topic === 'Moduswechsel') {\n        setMode(payload === '1' ? 'raw' : 'pulse');\n      }\n    });\n    return () => {\n      client.end();\n    };\n  }, []);\n  const publishModeChange = mode => {\n    const options = {\n      protocol: 'wss',\n      port: 8884\n    };\n    const client = mqtt.connect('wss://9165a2be0b2244a2be418b2d702267d5.s1.eu.hivemq.cloud:8884/mqtt', options);\n    client.on('connect', () => {\n      client.publish('Moduswechsel', mode);\n      client.end();\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MQTT Web App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => publishModeChange('1'),\n      children: \"Switch to Raw Data Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => publishModeChange('0'),\n      children: \"Switch to Pulse Data Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"dataDisplay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Data:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"dataOutput\",\n        children: mode === 'pulse' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Heart Rate: \", data.split(',')[0], \" bpm\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Blood Oxygen: \", data.split(',')[1], \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Raw Data: \", data]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"s/Dyi1iRMWQIHGUqIEEgtLNsh3Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","mqtt","jsxDEV","_jsxDEV","App","_s","data","setData","mode","setMode","options","protocol","port","username","password","client","connect","on","console","log","subscribe","topic","message","payload","toString","end","publishModeChange","publish","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","split","_c","$RefreshReg$"],"sources":["C:/Users/Appu/Documents/Appu Projects/sensorapp/biosensor-dashboard/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport mqtt from 'mqtt';\n\nconst App = () => {\n  const [data, setData] = useState('');\n  const [mode, setMode] = useState('pulse');\n\n  useEffect(() => {\n    const options = {\n      protocol: 'wss',\n      port: 8884,\n      username: 'hivemq.webclient.1719700172491',\n      password: 'F1N;&6yUus:If0>Xg8EG'\n    };\n    const client = mqtt.connect('wss://9165a2be0b2244a2be418b2d702267d5.s1.eu.hivemq.cloud:8884/mqtt', options);\n\n    client.on('connect', () => {\n      console.log('Connected to MQTT broker');\n      client.subscribe('Daten');\n      client.subscribe('Moduswechsel');\n    });\n\n    client.on('message', (topic, message) => {\n      const payload = message.toString();\n      if (topic === 'Daten') {\n        setData(payload);\n      } else if (topic === 'Moduswechsel') {\n        setMode(payload === '1' ? 'raw' : 'pulse');\n      }\n    });\n\n    return () => {\n      client.end();\n    };\n  }, []);\n\n  const publishModeChange = (mode) => {\n    const options = {\n      protocol: 'wss',\n      port: 8884,\n    \n    };\n    const client = mqtt.connect('wss://9165a2be0b2244a2be418b2d702267d5.s1.eu.hivemq.cloud:8884/mqtt', options);\n    client.on('connect', () => {\n      client.publish('Moduswechsel', mode);\n      client.end();\n    });\n  };\n\n  return (\n    <div>\n      <h1>MQTT Web App</h1>\n      <button onClick={() => publishModeChange('1')}>Switch to Raw Data Mode</button>\n      <button onClick={() => publishModeChange('0')}>Switch to Pulse Data Mode</button>\n\n      <div id=\"dataDisplay\">\n        <h2>Data:</h2>\n        <div id=\"dataOutput\">\n          {mode === 'pulse' ? (\n            <div>\n              <p>Heart Rate: {data.split(',')[0]} bpm</p>\n              <p>Blood Oxygen: {data.split(',')[1]}%</p>\n            </div>\n          ) : (\n            <p>Raw Data: {data}</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}